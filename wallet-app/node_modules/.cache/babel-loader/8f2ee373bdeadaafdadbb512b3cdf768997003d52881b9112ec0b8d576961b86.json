{"ast":null,"code":"import React,{useEffect,useState}from'react';import{HashRouter as Router,Routes,Route,Navigate}from'react-router-dom';import'./styles/App.css';import LoginScreen from'./components/LoginScreen';import Dashboard from'./components/Dashboard';import DebugPanel from'./components/DebugPanel';import TransactionMonitor from'./utils/TransactionMonitor';import{monitorNetworkConnection}from'./utils/PerformanceOptimizer';// Korumalı Route bileşeni\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{element}=_ref;// Aktif cüzdan ID'si ve session token var mı kontrol et\nconst hasActiveWallet=!!localStorage.getItem('activeWalletId');const hasSessionToken=!!localStorage.getItem('sessionToken');console.log('ProtectedRoute kontrolü:');console.log('- hasActiveWallet:',hasActiveWallet);console.log('- hasSessionToken:',hasSessionToken);console.log('- localStorage içeriği:',localStorage);// Kullanıcı giriş yapmışsa elementin kendisini döndür, yapmamışsa login sayfasına yönlendir\nreturn hasActiveWallet&&hasSessionToken?element:/*#__PURE__*/_jsx(Navigate,{to:\"/\"});};function App(){const[isLoggedIn,setIsLoggedIn]=useState(false);const[isLoading,setIsLoading]=useState(true);const[isOnline,setIsOnline]=useState(navigator.onLine);const[notification,setNotification]=useState(null);// Cüzdan durumunu kontrol et\nuseEffect(()=>{checkWalletStatus();// İşlem izlemeyi başlat\nTransactionMonitor.startMonitoring(30000);// 30s aralık\n// İşlem durumu değişikliği listener'ı ekle\nconst unsubscribe=TransactionMonitor.addStatusChangeListener(_ref2=>{let{transaction,oldStatus,newStatus}=_ref2;if(newStatus==='completed'){showNotification({type:'success',message:\"\".concat(transaction.amount,\" \").concat(transaction.currency,\" i\\u015Flemi ba\\u015Far\\u0131yla tamamland\\u0131.\"),duration:5000});}});// Network durumunu izle\nconst cleanup=monitorNetworkConnection(()=>{// Online\nsetIsOnline(true);showNotification({type:'info',message:'İnternet bağlantısı kuruldu.',duration:3000});},()=>{// Offline\nsetIsOnline(false);showNotification({type:'warning',message:'İnternet bağlantısı kesildi!',duration:0// Kalıcı bildirim\n});});// Cleanup\nreturn()=>{TransactionMonitor.stopMonitoring();unsubscribe();cleanup();};},[]);const checkWalletStatus=async()=>{try{setIsLoading(true);// walletAPI var mı kontrol et\nif(!window.walletAPI){console.warn(\"walletAPI bulunamadı, test modu kullanılacak\");// Test için: başlangıçta giriş yapmamış olarak başla\nsetIsLoggedIn(false);setIsLoading(false);return;}// Aktif cüzdan kontrolü yap\nconst activeWalletId=localStorage.getItem('activeWalletId');if(activeWalletId){// Session token kontrolü yap\nconst sessionToken=localStorage.getItem('sessionToken');if(sessionToken){// Oturum geçerli, otomatik giriş yap\nsetIsLoggedIn(true);}else{// Oturum geçersiz, login ekranına yönlendir\nsetIsLoggedIn(false);localStorage.removeItem('activeWalletId');}}else{// Aktif cüzdan yok, login ekranına yönlendir\nsetIsLoggedIn(false);}}catch(error){console.error('Cüzdan durum kontrolü hatası:',error);setIsLoggedIn(false);}finally{setIsLoading(false);}};// Bildirim göster\nconst showNotification=notif=>{setNotification(notif);// Otomatik kapatma süresi varsa\nif(notif.duration>0){setTimeout(()=>{setNotification(null);},notif.duration);}};// Bildirimi kapat\nconst closeNotification=()=>{setNotification(null);};// Yükleniyor durumu\nif(isLoading){return/*#__PURE__*/_jsxs(\"div\",{className:\"app-loading\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Y\\xFCkleniyor...\"})]});}return/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"app\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"app-content\",children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(LoginScreen,{})}),/*#__PURE__*/_jsx(Route,{path:\"/dashboard\",element:/*#__PURE__*/_jsx(ProtectedRoute,{element:/*#__PURE__*/_jsx(Dashboard,{})})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/\"})})]})}),process.env.NODE_ENV!=='production'&&/*#__PURE__*/_jsx(DebugPanel,{}),!isOnline&&/*#__PURE__*/_jsxs(\"div\",{className:\"offline-indicator\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-wifi-slash\"}),/*#__PURE__*/_jsx(\"span\",{children:\"\\xC7evrimd\\u0131\\u015F\\u0131 Mod\"})]}),notification&&/*#__PURE__*/_jsxs(\"div\",{className:\"app-notification \".concat(notification.type),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"notification-content\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas \".concat(notification.type==='success'?'fa-check-circle':notification.type==='warning'?'fa-exclamation-triangle':notification.type==='error'?'fa-times-circle':'fa-info-circle')}),/*#__PURE__*/_jsx(\"span\",{children:notification.message})]}),/*#__PURE__*/_jsx(\"button\",{className:\"notification-close\",onClick:closeNotification,children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-times\"})})]})]})});}export default App;","map":{"version":3,"names":["React","useEffect","useState","HashRouter","Router","Routes","Route","Navigate","LoginScreen","Dashboard","DebugPanel","TransactionMonitor","monitorNetworkConnection","jsx","_jsx","jsxs","_jsxs","ProtectedRoute","_ref","element","hasActiveWallet","localStorage","getItem","hasSessionToken","console","log","to","App","isLoggedIn","setIsLoggedIn","isLoading","setIsLoading","isOnline","setIsOnline","navigator","onLine","notification","setNotification","checkWalletStatus","startMonitoring","unsubscribe","addStatusChangeListener","_ref2","transaction","oldStatus","newStatus","showNotification","type","message","concat","amount","currency","duration","cleanup","stopMonitoring","window","walletAPI","warn","activeWalletId","sessionToken","removeItem","error","notif","setTimeout","closeNotification","className","children","path","process","env","NODE_ENV","onClick"],"sources":["C:/Cold_Wallet/wallet-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { HashRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport './styles/App.css';\nimport LoginScreen from './components/LoginScreen';\nimport Dashboard from './components/Dashboard';\nimport DebugPanel from './components/DebugPanel';\nimport TransactionMonitor from './utils/TransactionMonitor';\nimport { monitorNetworkConnection } from './utils/PerformanceOptimizer';\n\n// Korumalı Route bileşeni\nconst ProtectedRoute = ({ element }) => {\n  // Aktif cüzdan ID'si ve session token var mı kontrol et\n  const hasActiveWallet = !!localStorage.getItem('activeWalletId');\n  const hasSessionToken = !!localStorage.getItem('sessionToken');\n  \n  console.log('ProtectedRoute kontrolü:');\n  console.log('- hasActiveWallet:', hasActiveWallet);\n  console.log('- hasSessionToken:', hasSessionToken);\n  console.log('- localStorage içeriği:', localStorage);\n  \n  // Kullanıcı giriş yapmışsa elementin kendisini döndür, yapmamışsa login sayfasına yönlendir\n  return (hasActiveWallet && hasSessionToken) ? element : <Navigate to=\"/\" />;\n};\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isOnline, setIsOnline] = useState(navigator.onLine);\n  const [notification, setNotification] = useState(null);\n\n  // Cüzdan durumunu kontrol et\n  useEffect(() => {\n    checkWalletStatus();\n    \n    // İşlem izlemeyi başlat\n    TransactionMonitor.startMonitoring(30000); // 30s aralık\n    \n    // İşlem durumu değişikliği listener'ı ekle\n    const unsubscribe = TransactionMonitor.addStatusChangeListener(({ transaction, oldStatus, newStatus }) => {\n      if (newStatus === 'completed') {\n        showNotification({\n          type: 'success',\n          message: `${transaction.amount} ${transaction.currency} işlemi başarıyla tamamlandı.`,\n          duration: 5000\n        });\n      }\n    });\n    \n    // Network durumunu izle\n    const cleanup = monitorNetworkConnection(\n      () => { // Online\n        setIsOnline(true);\n        showNotification({\n          type: 'info',\n          message: 'İnternet bağlantısı kuruldu.',\n          duration: 3000\n        });\n      },\n      () => { // Offline\n        setIsOnline(false);\n        showNotification({\n          type: 'warning',\n          message: 'İnternet bağlantısı kesildi!',\n          duration: 0 // Kalıcı bildirim\n        });\n      }\n    );\n    \n    // Cleanup\n    return () => {\n      TransactionMonitor.stopMonitoring();\n      unsubscribe();\n      cleanup();\n    };\n  }, []);\n\n  const checkWalletStatus = async () => {\n    try {\n      setIsLoading(true);\n      \n      // walletAPI var mı kontrol et\n      if (!window.walletAPI) {\n        console.warn(\"walletAPI bulunamadı, test modu kullanılacak\");\n        // Test için: başlangıçta giriş yapmamış olarak başla\n        setIsLoggedIn(false);\n        setIsLoading(false);\n        return;\n      }\n      \n      // Aktif cüzdan kontrolü yap\n      const activeWalletId = localStorage.getItem('activeWalletId');\n      \n      if (activeWalletId) {\n        // Session token kontrolü yap\n        const sessionToken = localStorage.getItem('sessionToken');\n        \n        if (sessionToken) {\n          // Oturum geçerli, otomatik giriş yap\n          setIsLoggedIn(true);\n        } else {\n          // Oturum geçersiz, login ekranına yönlendir\n          setIsLoggedIn(false);\n          localStorage.removeItem('activeWalletId');\n        }\n      } else {\n        // Aktif cüzdan yok, login ekranına yönlendir\n        setIsLoggedIn(false);\n      }\n    } catch (error) {\n      console.error('Cüzdan durum kontrolü hatası:', error);\n      setIsLoggedIn(false);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  \n  // Bildirim göster\n  const showNotification = (notif) => {\n    setNotification(notif);\n    \n    // Otomatik kapatma süresi varsa\n    if (notif.duration > 0) {\n      setTimeout(() => {\n        setNotification(null);\n      }, notif.duration);\n    }\n  };\n  \n  // Bildirimi kapat\n  const closeNotification = () => {\n    setNotification(null);\n  };\n\n  // Yükleniyor durumu\n  if (isLoading) {\n    return (\n      <div className=\"app-loading\">\n        <div className=\"spinner\"></div>\n        <p>Yükleniyor...</p>\n      </div>\n    );\n  }\n\n  return (\n    <Router>\n      <div className=\"app\">\n        <div className=\"app-content\">\n          <Routes>\n            <Route path=\"/\" element={<LoginScreen />} />\n            <Route path=\"/dashboard\" element={<ProtectedRoute element={<Dashboard />} />} />\n            <Route path=\"*\" element={<Navigate to=\"/\" />} />\n          </Routes>\n        </div>\n        \n        {/* Developer Tools - Just for development, will be removed in production */}\n        {process.env.NODE_ENV !== 'production' && <DebugPanel />}\n        \n        {/* Network Status Indicator */}\n        {!isOnline && (\n          <div className=\"offline-indicator\">\n            <i className=\"fas fa-wifi-slash\"></i>\n            <span>Çevrimdışı Mod</span>\n          </div>\n        )}\n        \n        {/* Notification */}\n        {notification && (\n          <div className={`app-notification ${notification.type}`}>\n            <div className=\"notification-content\">\n              <i className={`fas ${\n                notification.type === 'success' ? 'fa-check-circle' : \n                notification.type === 'warning' ? 'fa-exclamation-triangle' :\n                notification.type === 'error' ? 'fa-times-circle' : 'fa-info-circle'\n              }`}></i>\n              <span>{notification.message}</span>\n            </div>\n            <button className=\"notification-close\" onClick={closeNotification}>\n              <i className=\"fas fa-times\"></i>\n            </button>\n          </div>\n        )}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,OAASC,UAAU,GAAI,CAAAC,MAAM,CAAEC,MAAM,CAAEC,KAAK,CAAEC,QAAQ,KAAQ,kBAAkB,CAChF,MAAO,kBAAkB,CACzB,MAAO,CAAAC,WAAW,KAAM,0BAA0B,CAClD,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C,MAAO,CAAAC,UAAU,KAAM,yBAAyB,CAChD,MAAO,CAAAC,kBAAkB,KAAM,4BAA4B,CAC3D,OAASC,wBAAwB,KAAQ,8BAA8B,CAEvE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAiB,IAAhB,CAAEC,OAAQ,CAAC,CAAAD,IAAA,CACjC;AACA,KAAM,CAAAE,eAAe,CAAG,CAAC,CAACC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC,CAChE,KAAM,CAAAC,eAAe,CAAG,CAAC,CAACF,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAE9DE,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC,CACvCD,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAEL,eAAe,CAAC,CAClDI,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAEF,eAAe,CAAC,CAClDC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAEJ,YAAY,CAAC,CAEpD;AACA,MAAQ,CAAAD,eAAe,EAAIG,eAAe,CAAIJ,OAAO,cAAGL,IAAA,CAACP,QAAQ,EAACmB,EAAE,CAAC,GAAG,CAAE,CAAC,CAC7E,CAAC,CAED,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAG3B,QAAQ,CAAC,KAAK,CAAC,CACnD,KAAM,CAAC4B,SAAS,CAAEC,YAAY,CAAC,CAAG7B,QAAQ,CAAC,IAAI,CAAC,CAChD,KAAM,CAAC8B,QAAQ,CAAEC,WAAW,CAAC,CAAG/B,QAAQ,CAACgC,SAAS,CAACC,MAAM,CAAC,CAC1D,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGnC,QAAQ,CAAC,IAAI,CAAC,CAEtD;AACAD,SAAS,CAAC,IAAM,CACdqC,iBAAiB,CAAC,CAAC,CAEnB;AACA3B,kBAAkB,CAAC4B,eAAe,CAAC,KAAK,CAAC,CAAE;AAE3C;AACA,KAAM,CAAAC,WAAW,CAAG7B,kBAAkB,CAAC8B,uBAAuB,CAACC,KAAA,EAA2C,IAA1C,CAAEC,WAAW,CAAEC,SAAS,CAAEC,SAAU,CAAC,CAAAH,KAAA,CACnG,GAAIG,SAAS,GAAK,WAAW,CAAE,CAC7BC,gBAAgB,CAAC,CACfC,IAAI,CAAE,SAAS,CACfC,OAAO,IAAAC,MAAA,CAAKN,WAAW,CAACO,MAAM,MAAAD,MAAA,CAAIN,WAAW,CAACQ,QAAQ,qDAA+B,CACrFC,QAAQ,CAAE,IACZ,CAAC,CAAC,CACJ,CACF,CAAC,CAAC,CAEF;AACA,KAAM,CAAAC,OAAO,CAAGzC,wBAAwB,CACtC,IAAM,CAAE;AACNqB,WAAW,CAAC,IAAI,CAAC,CACjBa,gBAAgB,CAAC,CACfC,IAAI,CAAE,MAAM,CACZC,OAAO,CAAE,8BAA8B,CACvCI,QAAQ,CAAE,IACZ,CAAC,CAAC,CACJ,CAAC,CACD,IAAM,CAAE;AACNnB,WAAW,CAAC,KAAK,CAAC,CAClBa,gBAAgB,CAAC,CACfC,IAAI,CAAE,SAAS,CACfC,OAAO,CAAE,8BAA8B,CACvCI,QAAQ,CAAE,CAAE;AACd,CAAC,CAAC,CACJ,CACF,CAAC,CAED;AACA,MAAO,IAAM,CACXzC,kBAAkB,CAAC2C,cAAc,CAAC,CAAC,CACnCd,WAAW,CAAC,CAAC,CACba,OAAO,CAAC,CAAC,CACX,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAf,iBAAiB,CAAG,KAAAA,CAAA,GAAY,CACpC,GAAI,CACFP,YAAY,CAAC,IAAI,CAAC,CAElB;AACA,GAAI,CAACwB,MAAM,CAACC,SAAS,CAAE,CACrBhC,OAAO,CAACiC,IAAI,CAAC,8CAA8C,CAAC,CAC5D;AACA5B,aAAa,CAAC,KAAK,CAAC,CACpBE,YAAY,CAAC,KAAK,CAAC,CACnB,OACF,CAEA;AACA,KAAM,CAAA2B,cAAc,CAAGrC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC,CAE7D,GAAIoC,cAAc,CAAE,CAClB;AACA,KAAM,CAAAC,YAAY,CAAGtC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAEzD,GAAIqC,YAAY,CAAE,CAChB;AACA9B,aAAa,CAAC,IAAI,CAAC,CACrB,CAAC,IAAM,CACL;AACAA,aAAa,CAAC,KAAK,CAAC,CACpBR,YAAY,CAACuC,UAAU,CAAC,gBAAgB,CAAC,CAC3C,CACF,CAAC,IAAM,CACL;AACA/B,aAAa,CAAC,KAAK,CAAC,CACtB,CACF,CAAE,MAAOgC,KAAK,CAAE,CACdrC,OAAO,CAACqC,KAAK,CAAC,+BAA+B,CAAEA,KAAK,CAAC,CACrDhC,aAAa,CAAC,KAAK,CAAC,CACtB,CAAC,OAAS,CACRE,YAAY,CAAC,KAAK,CAAC,CACrB,CACF,CAAC,CAED;AACA,KAAM,CAAAe,gBAAgB,CAAIgB,KAAK,EAAK,CAClCzB,eAAe,CAACyB,KAAK,CAAC,CAEtB;AACA,GAAIA,KAAK,CAACV,QAAQ,CAAG,CAAC,CAAE,CACtBW,UAAU,CAAC,IAAM,CACf1B,eAAe,CAAC,IAAI,CAAC,CACvB,CAAC,CAAEyB,KAAK,CAACV,QAAQ,CAAC,CACpB,CACF,CAAC,CAED;AACA,KAAM,CAAAY,iBAAiB,CAAGA,CAAA,GAAM,CAC9B3B,eAAe,CAAC,IAAI,CAAC,CACvB,CAAC,CAED;AACA,GAAIP,SAAS,CAAE,CACb,mBACEd,KAAA,QAAKiD,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BpD,IAAA,QAAKmD,SAAS,CAAC,SAAS,CAAM,CAAC,cAC/BnD,IAAA,MAAAoD,QAAA,CAAG,kBAAa,CAAG,CAAC,EACjB,CAAC,CAEV,CAEA,mBACEpD,IAAA,CAACV,MAAM,EAAA8D,QAAA,cACLlD,KAAA,QAAKiD,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBpD,IAAA,QAAKmD,SAAS,CAAC,aAAa,CAAAC,QAAA,cAC1BlD,KAAA,CAACX,MAAM,EAAA6D,QAAA,eACLpD,IAAA,CAACR,KAAK,EAAC6D,IAAI,CAAC,GAAG,CAAChD,OAAO,cAAEL,IAAA,CAACN,WAAW,GAAE,CAAE,CAAE,CAAC,cAC5CM,IAAA,CAACR,KAAK,EAAC6D,IAAI,CAAC,YAAY,CAAChD,OAAO,cAAEL,IAAA,CAACG,cAAc,EAACE,OAAO,cAAEL,IAAA,CAACL,SAAS,GAAE,CAAE,CAAE,CAAE,CAAE,CAAC,cAChFK,IAAA,CAACR,KAAK,EAAC6D,IAAI,CAAC,GAAG,CAAChD,OAAO,cAAEL,IAAA,CAACP,QAAQ,EAACmB,EAAE,CAAC,GAAG,CAAE,CAAE,CAAE,CAAC,EAC1C,CAAC,CACN,CAAC,CAGL0C,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,YAAY,eAAIxD,IAAA,CAACJ,UAAU,GAAE,CAAC,CAGvD,CAACsB,QAAQ,eACRhB,KAAA,QAAKiD,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChCpD,IAAA,MAAGmD,SAAS,CAAC,mBAAmB,CAAI,CAAC,cACrCnD,IAAA,SAAAoD,QAAA,CAAM,kCAAc,CAAM,CAAC,EACxB,CACN,CAGA9B,YAAY,eACXpB,KAAA,QAAKiD,SAAS,qBAAAhB,MAAA,CAAsBb,YAAY,CAACW,IAAI,CAAG,CAAAmB,QAAA,eACtDlD,KAAA,QAAKiD,SAAS,CAAC,sBAAsB,CAAAC,QAAA,eACnCpD,IAAA,MAAGmD,SAAS,QAAAhB,MAAA,CACVb,YAAY,CAACW,IAAI,GAAK,SAAS,CAAG,iBAAiB,CACnDX,YAAY,CAACW,IAAI,GAAK,SAAS,CAAG,yBAAyB,CAC3DX,YAAY,CAACW,IAAI,GAAK,OAAO,CAAG,iBAAiB,CAAG,gBAAgB,CACnE,CAAI,CAAC,cACRjC,IAAA,SAAAoD,QAAA,CAAO9B,YAAY,CAACY,OAAO,CAAO,CAAC,EAChC,CAAC,cACNlC,IAAA,WAAQmD,SAAS,CAAC,oBAAoB,CAACM,OAAO,CAAEP,iBAAkB,CAAAE,QAAA,cAChEpD,IAAA,MAAGmD,SAAS,CAAC,cAAc,CAAI,CAAC,CAC1B,CAAC,EACN,CACN,EACE,CAAC,CACA,CAAC,CAEb,CAEA,cAAe,CAAAtC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}