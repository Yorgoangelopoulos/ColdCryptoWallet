{"ast":null,"code":"/**\r\n * Performans Optimizasyon Yardımcıları\r\n */// Debounce fonksiyonu\nexport const debounce=(func,wait)=>{let timeout;return function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}const context=this;clearTimeout(timeout);timeout=setTimeout(()=>{func.apply(context,args);},wait);};};// Throttle fonksiyonu\nexport const throttle=(func,limit)=>{let inThrottle;return function(){const context=this;if(!inThrottle){for(var _len2=arguments.length,args=new Array(_len2),_key2=0;_key2<_len2;_key2++){args[_key2]=arguments[_key2];}func.apply(context,args);inThrottle=true;setTimeout(()=>inThrottle=false,limit);}};};// Memoize fonksiyonu\nexport const memoize=func=>{const cache=new Map();return function(){for(var _len3=arguments.length,args=new Array(_len3),_key3=0;_key3<_len3;_key3++){args[_key3]=arguments[_key3];}const key=JSON.stringify(args);if(cache.has(key)){return cache.get(key);}const result=func(...args);cache.set(key,result);return result;};};// React komponenti için shouldComponentUpdate optimizasyonu\nexport const arePropsEqual=(prevProps,nextProps,propsToCheck)=>{for(const prop of propsToCheck){if(prevProps[prop]!==nextProps[prop]){return false;}}return true;};// Ağ bağlantı durumunu izle\nexport const monitorNetworkConnection=(onlineCallback,offlineCallback)=>{const handleOnline=()=>{onlineCallback&&onlineCallback();};const handleOffline=()=>{offlineCallback&&offlineCallback();};window.addEventListener('online',handleOnline);window.addEventListener('offline',handleOffline);// Cleanup function\nreturn()=>{window.removeEventListener('online',handleOnline);window.removeEventListener('offline',handleOffline);};};// Batched API çağrıları\nexport const batchApiCalls=async function(calls){let batchSize=arguments.length>1&&arguments[1]!==undefined?arguments[1]:3;let delayMs=arguments.length>2&&arguments[2]!==undefined?arguments[2]:200;const results=[];// Batch'lere böl\nfor(let i=0;i<calls.length;i+=batchSize){const batch=calls.slice(i,i+batchSize);// Bu batch'teki tüm çağrıları başlat\nconst batchResults=await Promise.all(batch.map(call=>call().catch(err=>({error:err}))));// Sonuçları ekle\nresults.push(...batchResults);// Bir sonraki batch öncesinde bekle\nif(i+batchSize<calls.length){await new Promise(resolve=>setTimeout(resolve,delayMs));}}return results;};// Resim ve veri önbellek yönetimi\nexport class CacheManager{constructor(){let maxSize=arguments.length>0&&arguments[0]!==undefined?arguments[0]:100;this.cache=new Map();this.maxSize=maxSize;this.accessOrder=[];}// Önbelleğe veri ekle\nset(key,value){let ttl=arguments.length>2&&arguments[2]!==undefined?arguments[2]:3600000;// Varsayılan TTL: 1 saat\nif(this.cache.size>=this.maxSize&&!this.cache.has(key)){// En az kullanılan öğeyi kaldır\nconst leastUsedKey=this.accessOrder.shift();this.cache.delete(leastUsedKey);}// Yeni değeri ekle\nthis.cache.set(key,{value,expires:Date.now()+ttl});// Erişim sırasını güncelle\nthis.updateAccessOrder(key);}// Önbellekten veri al\nget(key){const item=this.cache.get(key);// Öğe yoksa veya süresi dolduysa\nif(!item||item.expires<Date.now()){this.cache.delete(key);return null;}// Erişim sırasını güncelle\nthis.updateAccessOrder(key);return item.value;}// Önbellekten veri sil\ndelete(key){this.cache.delete(key);this.accessOrder=this.accessOrder.filter(k=>k!==key);}// Tüm önbelleği temizle\nclear(){this.cache.clear();this.accessOrder=[];}// Süresi dolmuş öğeleri temizle\ncleanup(){const now=Date.now();const expiredKeys=[];this.cache.forEach((item,key)=>{if(item.expires<now){expiredKeys.push(key);}});expiredKeys.forEach(key=>{this.delete(key);});return expiredKeys.length;}// Erişim sırasını güncelle\nupdateAccessOrder(key){// Önceki konumu kaldır\nthis.accessOrder=this.accessOrder.filter(k=>k!==key);// Sona ekle\nthis.accessOrder.push(key);}}// İçerik yükleme optimizasyonu\nexport const lazyLoadData=function(loadDataFn){let dependencies=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];let options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};const{enabled=true,delay=0,retryCount=3,retryDelay=1000,onSuccess,onError}=options;let isMounted=true;let retries=0;let timer=null;const load=async()=>{if(!enabled||!isMounted)return;try{if(delay>0){await new Promise(resolve=>{timer=setTimeout(resolve,delay);});}const data=await loadDataFn();if(isMounted&&onSuccess){onSuccess(data);}}catch(error){console.error('Error lazy loading data:',error);if(isMounted&&retries<retryCount){retries++;// Exponential backoff\nconst backoffDelay=retryDelay*Math.pow(2,retries-1);console.log(\"Retrying in \".concat(backoffDelay,\"ms (attempt \").concat(retries,\"/\").concat(retryCount,\")...\"));timer=setTimeout(load,backoffDelay);}else if(isMounted&&onError){onError(error);}}};// İlk yükleme\nload();// Cleanup\nreturn()=>{isMounted=false;if(timer){clearTimeout(timer);}};};","map":{"version":3,"names":["debounce","func","wait","timeout","_len","arguments","length","args","Array","_key","context","clearTimeout","setTimeout","apply","throttle","limit","inThrottle","_len2","_key2","memoize","cache","Map","_len3","_key3","key","JSON","stringify","has","get","result","set","arePropsEqual","prevProps","nextProps","propsToCheck","prop","monitorNetworkConnection","onlineCallback","offlineCallback","handleOnline","handleOffline","window","addEventListener","removeEventListener","batchApiCalls","calls","batchSize","undefined","delayMs","results","i","batch","slice","batchResults","Promise","all","map","call","catch","err","error","push","resolve","CacheManager","constructor","maxSize","accessOrder","value","ttl","size","leastUsedKey","shift","delete","expires","Date","now","updateAccessOrder","item","filter","k","clear","cleanup","expiredKeys","forEach","lazyLoadData","loadDataFn","dependencies","options","enabled","delay","retryCount","retryDelay","onSuccess","onError","isMounted","retries","timer","load","data","console","backoffDelay","Math","pow","log","concat"],"sources":["C:/Cold_Wallet/wallet-app/src/utils/PerformanceOptimizer.js"],"sourcesContent":["/**\r\n * Performans Optimizasyon Yardımcıları\r\n */\r\n\r\n// Debounce fonksiyonu\r\nexport const debounce = (func, wait) => {\r\n  let timeout;\r\n  \r\n  return function(...args) {\r\n    const context = this;\r\n    clearTimeout(timeout);\r\n    \r\n    timeout = setTimeout(() => {\r\n      func.apply(context, args);\r\n    }, wait);\r\n  };\r\n};\r\n\r\n// Throttle fonksiyonu\r\nexport const throttle = (func, limit) => {\r\n  let inThrottle;\r\n  \r\n  return function(...args) {\r\n    const context = this;\r\n    \r\n    if (!inThrottle) {\r\n      func.apply(context, args);\r\n      inThrottle = true;\r\n      setTimeout(() => inThrottle = false, limit);\r\n    }\r\n  };\r\n};\r\n\r\n// Memoize fonksiyonu\r\nexport const memoize = (func) => {\r\n  const cache = new Map();\r\n  \r\n  return (...args) => {\r\n    const key = JSON.stringify(args);\r\n    \r\n    if (cache.has(key)) {\r\n      return cache.get(key);\r\n    }\r\n    \r\n    const result = func(...args);\r\n    cache.set(key, result);\r\n    \r\n    return result;\r\n  };\r\n};\r\n\r\n// React komponenti için shouldComponentUpdate optimizasyonu\r\nexport const arePropsEqual = (prevProps, nextProps, propsToCheck) => {\r\n  for (const prop of propsToCheck) {\r\n    if (prevProps[prop] !== nextProps[prop]) {\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  return true;\r\n};\r\n\r\n// Ağ bağlantı durumunu izle\r\nexport const monitorNetworkConnection = (onlineCallback, offlineCallback) => {\r\n  const handleOnline = () => {\r\n    onlineCallback && onlineCallback();\r\n  };\r\n  \r\n  const handleOffline = () => {\r\n    offlineCallback && offlineCallback();\r\n  };\r\n  \r\n  window.addEventListener('online', handleOnline);\r\n  window.addEventListener('offline', handleOffline);\r\n  \r\n  // Cleanup function\r\n  return () => {\r\n    window.removeEventListener('online', handleOnline);\r\n    window.removeEventListener('offline', handleOffline);\r\n  };\r\n};\r\n\r\n// Batched API çağrıları\r\nexport const batchApiCalls = async (calls, batchSize = 3, delayMs = 200) => {\r\n  const results = [];\r\n  \r\n  // Batch'lere böl\r\n  for (let i = 0; i < calls.length; i += batchSize) {\r\n    const batch = calls.slice(i, i + batchSize);\r\n    \r\n    // Bu batch'teki tüm çağrıları başlat\r\n    const batchResults = await Promise.all(\r\n      batch.map(call => call().catch(err => ({ error: err })))\r\n    );\r\n    \r\n    // Sonuçları ekle\r\n    results.push(...batchResults);\r\n    \r\n    // Bir sonraki batch öncesinde bekle\r\n    if (i + batchSize < calls.length) {\r\n      await new Promise(resolve => setTimeout(resolve, delayMs));\r\n    }\r\n  }\r\n  \r\n  return results;\r\n};\r\n\r\n// Resim ve veri önbellek yönetimi\r\nexport class CacheManager {\r\n  constructor(maxSize = 100) {\r\n    this.cache = new Map();\r\n    this.maxSize = maxSize;\r\n    this.accessOrder = [];\r\n  }\r\n  \r\n  // Önbelleğe veri ekle\r\n  set(key, value, ttl = 3600000) { // Varsayılan TTL: 1 saat\r\n    if (this.cache.size >= this.maxSize && !this.cache.has(key)) {\r\n      // En az kullanılan öğeyi kaldır\r\n      const leastUsedKey = this.accessOrder.shift();\r\n      this.cache.delete(leastUsedKey);\r\n    }\r\n    \r\n    // Yeni değeri ekle\r\n    this.cache.set(key, {\r\n      value,\r\n      expires: Date.now() + ttl\r\n    });\r\n    \r\n    // Erişim sırasını güncelle\r\n    this.updateAccessOrder(key);\r\n  }\r\n  \r\n  // Önbellekten veri al\r\n  get(key) {\r\n    const item = this.cache.get(key);\r\n    \r\n    // Öğe yoksa veya süresi dolduysa\r\n    if (!item || item.expires < Date.now()) {\r\n      this.cache.delete(key);\r\n      return null;\r\n    }\r\n    \r\n    // Erişim sırasını güncelle\r\n    this.updateAccessOrder(key);\r\n    \r\n    return item.value;\r\n  }\r\n  \r\n  // Önbellekten veri sil\r\n  delete(key) {\r\n    this.cache.delete(key);\r\n    this.accessOrder = this.accessOrder.filter(k => k !== key);\r\n  }\r\n  \r\n  // Tüm önbelleği temizle\r\n  clear() {\r\n    this.cache.clear();\r\n    this.accessOrder = [];\r\n  }\r\n  \r\n  // Süresi dolmuş öğeleri temizle\r\n  cleanup() {\r\n    const now = Date.now();\r\n    const expiredKeys = [];\r\n    \r\n    this.cache.forEach((item, key) => {\r\n      if (item.expires < now) {\r\n        expiredKeys.push(key);\r\n      }\r\n    });\r\n    \r\n    expiredKeys.forEach(key => {\r\n      this.delete(key);\r\n    });\r\n    \r\n    return expiredKeys.length;\r\n  }\r\n  \r\n  // Erişim sırasını güncelle\r\n  updateAccessOrder(key) {\r\n    // Önceki konumu kaldır\r\n    this.accessOrder = this.accessOrder.filter(k => k !== key);\r\n    // Sona ekle\r\n    this.accessOrder.push(key);\r\n  }\r\n}\r\n\r\n// İçerik yükleme optimizasyonu\r\nexport const lazyLoadData = (loadDataFn, dependencies = [], options = {}) => {\r\n  const {\r\n    enabled = true,\r\n    delay = 0,\r\n    retryCount = 3,\r\n    retryDelay = 1000,\r\n    onSuccess,\r\n    onError\r\n  } = options;\r\n  \r\n  let isMounted = true;\r\n  let retries = 0;\r\n  let timer = null;\r\n  \r\n  const load = async () => {\r\n    if (!enabled || !isMounted) return;\r\n    \r\n    try {\r\n      if (delay > 0) {\r\n        await new Promise(resolve => {\r\n          timer = setTimeout(resolve, delay);\r\n        });\r\n      }\r\n      \r\n      const data = await loadDataFn();\r\n      \r\n      if (isMounted && onSuccess) {\r\n        onSuccess(data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error lazy loading data:', error);\r\n      \r\n      if (isMounted && retries < retryCount) {\r\n        retries++;\r\n        \r\n        // Exponential backoff\r\n        const backoffDelay = retryDelay * Math.pow(2, retries - 1);\r\n        \r\n        console.log(`Retrying in ${backoffDelay}ms (attempt ${retries}/${retryCount})...`);\r\n        \r\n        timer = setTimeout(load, backoffDelay);\r\n      } else if (isMounted && onError) {\r\n        onError(error);\r\n      }\r\n    }\r\n  };\r\n  \r\n  // İlk yükleme\r\n  load();\r\n  \r\n  // Cleanup\r\n  return () => {\r\n    isMounted = false;\r\n    \r\n    if (timer) {\r\n      clearTimeout(timer);\r\n    }\r\n  };\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}